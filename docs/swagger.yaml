definitions:
  model.Asset:
    properties:
      address:
        type: string
      bank:
        type: string
      bik:
        type: string
      checkingAccount:
        type: string
      correspondentAccount:
        type: string
      email:
        type: string
      id:
        type: string
      inn:
        type: string
      ogrn:
        type: string
      phoneNumber:
        type: integer
      shortName:
        type: string
      signer:
        type: string
      signerBasis:
        type: string
      signerTitle:
        type: string
    type: object
  model.Attachment:
    properties:
      createDate:
        type: string
      fileName:
        type: string
      id:
        type: string
      mimeType:
        type: string
      path:
        type: string
      size:
        type: integer
    type: object
  model.Authority:
    properties:
      description:
        type: string
      id:
        type: string
      method:
        type: string
    type: object
  model.AuthorizationResponse:
    properties:
      access_token:
        type: string
      ati:
        type: string
      aud:
        type: string
      authorities:
        items:
          type: string
        type: array
      email:
        type: string
      exp:
        type: integer
      firstName:
        type: string
      iat:
        type: integer
      iss:
        type: string
      jti:
        type: string
      lastName:
        type: string
      nbf:
        type: integer
      refresh_token:
        type: string
      roles:
        items:
          type: string
        type: array
      sub:
        type: string
      token_type:
        type: string
      tokenValue:
        type: string
      userId:
        type: string
      username:
        type: string
    type: object
  model.Country:
    properties:
      address:
        type: string
      bank:
        type: string
      bik:
        type: string
      checkingAccount:
        type: string
      correspondentAccount:
        type: string
      email:
        type: string
      id:
        type: string
      inn:
        type: string
      ogrn:
        type: string
      phoneNumber:
        type: integer
      shortName:
        type: string
      signer:
        type: string
      signerBasis:
        type: string
      signerTitle:
        type: string
    type: object
  model.Role:
    properties:
      authorities:
        items:
          $ref: '#/definitions/model.Authority'
        type: array
      description:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  model.User:
    properties:
      authorities:
        items:
          $ref: '#/definitions/model.Authority'
        type: array
      email:
        type: string
      firstName:
        type: string
      id:
        type: string
      isBlocked:
        type: boolean
      lastName:
        type: string
      phoneNumber:
        type: integer
      roles:
        items:
          $ref: '#/definitions/model.Role'
        type: array
      username:
        type: string
    type: object
host: assets.deadline.team
info:
  contact:
    email: info@deadline.team
    name: API Support
    url: https://deadline.team
  title: assets API
  version: "0.1"
paths:
  /api/asset/assets/:
    get:
      consumes:
      - application/json
      description: Get all asset
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Asset'
            type: array
        "400":
          description: ""
        "500":
          description: ""
      security:
      - BearerAuth: []
      summary: getAll
      tags:
      - Asset controller
    post:
      consumes:
      - application/json
      description: Create asset
      parameters:
      - description: Create Asset
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.Asset'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Asset'
        "400":
          description: ""
        "500":
          description: ""
      security:
      - BearerAuth: []
      summary: create
      tags:
      - Asset controller
  /api/asset/assets/{id}:
    delete:
      consumes:
      - application/json
      description: Delete asset by id
      parameters:
      - description: Asset.ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "500":
          description: ""
      security:
      - BearerAuth: []
      summary: deleteById
      tags:
      - Asset controller
    get:
      consumes:
      - application/json
      description: Get asset by id
      parameters:
      - description: Asset.ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Asset'
        "400":
          description: ""
        "500":
          description: ""
      security:
      - BearerAuth: []
      summary: getById
      tags:
      - Asset controller
    put:
      consumes:
      - application/json
      description: Update asset
      parameters:
      - description: Update Asset
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.Asset'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Asset'
        "400":
          description: ""
        "500":
          description: ""
      security:
      - BearerAuth: []
      summary: update
      tags:
      - Asset controller
  /api/attachment/attachments/:
    post:
      consumes:
      - multipart/form-data
      description: Create attachment
      parameters:
      - description: Create Attachment
        in: body
        name: file
        required: true
        schema:
          $ref: '#/definitions/model.Attachment'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Attachment'
        "400":
          description: ""
        "500":
          description: ""
      security:
      - BearerAuth: []
      summary: create
      tags:
      - Attachment controller
  /api/attachment/attachments/{id}:
    delete:
      consumes:
      - application/json
      description: Delete attachment by id
      parameters:
      - description: Attachment.ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "500":
          description: ""
      security:
      - BearerAuth: []
      summary: deleteById
      tags:
      - Attachment controller
    get:
      consumes:
      - application/json
      description: Get attachment by id
      parameters:
      - description: Attachment.ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Attachment'
        "400":
          description: ""
        "500":
          description: ""
      security:
      - BearerAuth: []
      summary: getById
      tags:
      - Attachment controller
  /api/attachment/attachments/{id}/meta:
    get:
      consumes:
      - application/json
      description: Get attachment meta by id
      parameters:
      - description: Attachment.ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Attachment'
        "400":
          description: ""
        "500":
          description: ""
      security:
      - BearerAuth: []
      summary: getMetaById
      tags:
      - Attachment controller
  /api/attachment/attachments/meta:
    get:
      consumes:
      - application/json
      description: Get all attachment
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Attachment'
            type: array
        "400":
          description: ""
        "500":
          description: ""
      security:
      - BearerAuth: []
      summary: getAllMeta
      tags:
      - Attachment controller
  /api/authorization/authorities/:
    get:
      consumes:
      - application/json
      description: Get all authority
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Authority'
            type: array
        "400":
          description: ""
        "500":
          description: ""
      security:
      - BearerAuth: []
      summary: getAll
      tags:
      - Authority controller
    post:
      consumes:
      - application/json
      description: Create authority
      parameters:
      - description: Create Authority
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.Authority'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Authority'
        "400":
          description: ""
        "500":
          description: ""
      security:
      - BearerAuth: []
      summary: create
      tags:
      - Authority controller
  /api/authorization/authorities/{id}:
    delete:
      consumes:
      - application/json
      description: Delete authority by id
      parameters:
      - description: Authority.ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "500":
          description: ""
      security:
      - BearerAuth: []
      summary: deleteById
      tags:
      - Authority controller
    get:
      consumes:
      - application/json
      description: Get authority by id
      parameters:
      - description: Authority.ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Authority'
        "400":
          description: ""
        "500":
          description: ""
      security:
      - BearerAuth: []
      summary: getById
      tags:
      - Authority controller
    put:
      consumes:
      - application/json
      description: Update authority
      parameters:
      - description: Update Authority
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.Authority'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Authority'
        "400":
          description: ""
        "500":
          description: ""
      security:
      - BearerAuth: []
      summary: update
      tags:
      - Authority controller
  /api/authorization/oauth/token:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Authorize
      parameters:
      - description: Authorize request grant_type=enum(password, refresh_token)&username=test&password=test
        in: body
        name: request
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.AuthorizationResponse'
        "500":
          description: ""
      summary: authorize
      tags:
      - Authorization controller
  /api/authorization/roles/:
    get:
      consumes:
      - application/json
      description: Get all role
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Role'
            type: array
        "400":
          description: ""
        "500":
          description: ""
      security:
      - BearerAuth: []
      summary: getAll
      tags:
      - Role controller
    post:
      consumes:
      - application/json
      description: Create role
      parameters:
      - description: Create Role
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.Role'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Role'
        "400":
          description: ""
        "500":
          description: ""
      security:
      - BearerAuth: []
      summary: create
      tags:
      - Role controller
  /api/authorization/roles/{id}:
    delete:
      consumes:
      - application/json
      description: Delete role by id
      parameters:
      - description: Role.ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "500":
          description: ""
      security:
      - BearerAuth: []
      summary: deleteById
      tags:
      - Role controller
    get:
      consumes:
      - application/json
      description: Get role by id
      parameters:
      - description: Role.ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Role'
        "400":
          description: ""
        "500":
          description: ""
      security:
      - BearerAuth: []
      summary: getById
      tags:
      - Role controller
    put:
      consumes:
      - application/json
      description: Update role
      parameters:
      - description: Update Role
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.Role'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Role'
        "400":
          description: ""
        "500":
          description: ""
      security:
      - BearerAuth: []
      summary: update
      tags:
      - Role controller
  /api/authorization/users/:
    get:
      consumes:
      - application/json
      description: Get all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
        "400":
          description: ""
        "500":
          description: ""
      security:
      - BearerAuth: []
      summary: getAll
      tags:
      - User controller
    post:
      consumes:
      - application/json
      description: Create a user
      parameters:
      - description: Create User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: ""
        "500":
          description: ""
      security:
      - BearerAuth: []
      summary: create
      tags:
      - User controller
  /api/authorization/users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete user by id
      parameters:
      - description: User.ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "500":
          description: ""
      security:
      - BearerAuth: []
      summary: deleteById
      tags:
      - User controller
    get:
      consumes:
      - application/json
      description: Get user by id
      parameters:
      - description: User.ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: ""
        "500":
          description: ""
      security:
      - BearerAuth: []
      summary: getById
      tags:
      - User controller
    put:
      consumes:
      - application/json
      description: Update a user
      parameters:
      - description: Update User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: ""
        "500":
          description: ""
      security:
      - BearerAuth: []
      summary: update
      tags:
      - User controller
  /api/authorization/users/{id}/authorities:
    delete:
      consumes:
      - application/json
      description: Remove authorities to user by id
      parameters:
      - description: User.ID
        in: path
        name: id
        required: true
        type: string
      - description: User.Authorities
        in: query
        name: authoritiesIds
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: ""
        "500":
          description: ""
      security:
      - BearerAuth: []
      summary: removeAuthorities
      tags:
      - User controller
    put:
      consumes:
      - application/json
      description: Add authorities to user by id
      parameters:
      - description: User.ID
        in: path
        name: id
        required: true
        type: string
      - description: User.Authorities
        in: query
        name: authoritiesIds
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: ""
        "500":
          description: ""
      security:
      - BearerAuth: []
      summary: addAuthorities
      tags:
      - User controller
  /api/authorization/users/{id}/roles:
    delete:
      consumes:
      - application/json
      description: Remove roles to user by id
      parameters:
      - description: User.ID
        in: path
        name: id
        required: true
        type: string
      - description: User.Roles
        in: query
        name: rolesIds
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: ""
        "500":
          description: ""
      security:
      - BearerAuth: []
      summary: removeRoles
      tags:
      - User controller
    put:
      consumes:
      - application/json
      description: Add roles to user by id
      parameters:
      - description: User.ID
        in: path
        name: id
        required: true
        type: string
      - description: User.Roles
        in: query
        name: rolesIds
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: ""
        "500":
          description: ""
      security:
      - BearerAuth: []
      summary: addRoles
      tags:
      - User controller
  /api/authorization/users/current:
    get:
      consumes:
      - application/json
      description: Get current user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: ""
        "500":
          description: ""
      security:
      - BearerAuth: []
      summary: getCurrent
      tags:
      - User controller
  /api/country/countries/:
    get:
      consumes:
      - application/json
      description: Get all country
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Country'
            type: array
        "400":
          description: ""
        "500":
          description: ""
      security:
      - BearerAuth: []
      summary: getAll
      tags:
      - Country controller
    post:
      consumes:
      - application/json
      description: Create country
      parameters:
      - description: Create Country
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.Country'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Country'
        "400":
          description: ""
        "500":
          description: ""
      security:
      - BearerAuth: []
      summary: create
      tags:
      - Country controller
  /api/country/countries/{id}:
    delete:
      consumes:
      - application/json
      description: Delete country by id
      parameters:
      - description: Country.ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "500":
          description: ""
      security:
      - BearerAuth: []
      summary: deleteById
      tags:
      - Country controller
    get:
      consumes:
      - application/json
      description: Get country by id
      parameters:
      - description: Country.ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Country'
        "400":
          description: ""
        "500":
          description: ""
      security:
      - BearerAuth: []
      summary: getById
      tags:
      - Country controller
    put:
      consumes:
      - application/json
      description: Update country
      parameters:
      - description: Update Country
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.Country'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Country'
        "400":
          description: ""
        "500":
          description: ""
      security:
      - BearerAuth: []
      summary: update
      tags:
      - Country controller
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
